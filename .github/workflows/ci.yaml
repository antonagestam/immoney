name: CI
on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COLUMNS: "120"
  FORCE_COLOR: "1"
  PYTHONUNBUFFERED: "1"

jobs:
  lint:
    name: Static analysis
    uses: antonagestam/goose/.github/workflows/run.yaml@0.9.0

  type-check:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: pip
          cache-dependency-path: requirements.txt
          check-latest: true
      - name: mypy cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: "${{ runner.os }}-mypy-3.13-${{ hashFiles('requirements.txt') }}"
          restore-keys: |
            ${{ runner.os }}-mypy-3.13
            ${{ runner.os }}-mypy
      - run: pip install -e .
      - run: pip install -r requirements.txt
      - run: mypy --strict

  check-build:
    name: Check packaging metadata
    uses: less-action/reusables/.github/workflows/python-test-build.yaml@main

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.cfg
          check-latest: true
      - run: pip install -e '.[test,pydantic,babel]'
      - run: coverage run -m pytest
      - run: |
          coverage report
          coverage xml
      - uses: codecov/codecov-action@v5
        if: '!github.event.schedule'
        with:
          files: coverage.xml
          fail_ci_if_error: false
          name: codecov-py${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  check-generate-currencies:
    name: Check currencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: generate-requirements.txt
          check-latest: true
      - run: pip install --upgrade -r generate-requirements.txt
      - run: |
          python generate-currencies.py
          diff=$(git --no-pager diff)
          if [[ ! -z "$diff" ]]; then
            echo "ðŸ’¥ Non-empty output from git diff."
            echo
            echo "$diff"
            exit 1
          else
            echo "âœ… No diff to current currency module."
          fi
